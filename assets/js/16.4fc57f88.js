(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{190:function(t,s,a){t.exports=a.p+"assets/img/2.0f27eecc.png"},251:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"threadpoolexecutor源码解读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadpoolexecutor源码解读","aria-hidden":"true"}},[t._v("#")]),t._v(" ThreadPoolExecutor源码解读")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#线程池的域"}},[t._v("线程池的域")])]),n("li",[n("a",{attrs:{href:"#新增任务流程图"}},[t._v("新增任务流程图")])]),n("li",[n("a",{attrs:{href:"#worker"}},[t._v("Worker")])]),n("li",[n("a",{attrs:{href:"#hook方法"}},[t._v("hook方法")])])])]),t._v("\n最近又对线程池的源码进行了阅读，子曰温故而知新，古人诚不我欺也"),n("p"),t._v(" "),n("h2",{attrs:{id:"线程池的域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程池的域","aria-hidden":"true"}},[t._v("#")]),t._v(" 线程池的域")]),t._v(" "),n("p",[t._v("要了解一个类，那么就要首先知道它有哪些域，通过这些域才构成了这个对象，外界通过公有的方法来影响这些域从而影响这个对象。以下就将线程池中的较为重要的域进行了罗列")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("名字")]),t._v(" "),n("th",[t._v("备注")]),t._v(" "),n("th",[t._v("发布情况")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("ctl")]),t._v(" "),n("td",[t._v("控制运行状态、有效的线程数")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("workQueue")]),t._v(" "),n("td",[t._v("工作队列")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("mainLock")]),t._v(" "),n("td",[t._v("主锁")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("workers")]),t._v(" "),n("td",[t._v("工作者线程")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("largestPoolSize")]),t._v(" "),n("td",[t._v("最大线程池大小")]),t._v(" "),n("td",[t._v("√")])]),t._v(" "),n("tr",[n("td",[t._v("completedTaskCount")]),t._v(" "),n("td",[t._v("已完成的工作数量")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("threadFactory")]),t._v(" "),n("td",[t._v("线程工厂")]),t._v(" "),n("td",[t._v("√")])]),t._v(" "),n("tr",[n("td",[t._v("handler")]),t._v(" "),n("td",[t._v("拒绝策略")]),t._v(" "),n("td",[t._v("√")])]),t._v(" "),n("tr",[n("td",[t._v("keepAliveTime")]),t._v(" "),n("td",[t._v("存活保持时间")]),t._v(" "),n("td",[t._v("√")])]),t._v(" "),n("tr",[n("td",[t._v("allowCoreThreadTimeOut")]),t._v(" "),n("td",[t._v("为否时关键线程也会结束")]),t._v(" "),n("td",[t._v("√")])]),t._v(" "),n("tr",[n("td",[t._v("corePoolSize")]),t._v(" "),n("td",[t._v("关键线程数量")]),t._v(" "),n("td",[t._v("√")])]),t._v(" "),n("tr",[n("td",[t._v("defaultHandler")]),t._v(" "),n("td",[t._v("默认拒绝策略（（default）AbortPolicy）")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("maximumPoolSize")]),t._v(" "),n("td",[t._v("线程池最大数量")]),t._v(" "),n("td",[t._v("√")])])])]),t._v(" "),n("p",[t._v("外界在对线程池进行操作时，会对上述域产生影响，根据其对外界的影响不同，这些域可以分为两类")]),t._v(" "),n("ul",[n("li",[t._v("严重影响：corePoolSize、maximumPoolSize、keepAliveTime、workQueue、threadFactory、handler、allowCoreThreadTimeOut")]),t._v(" "),n("li",[t._v("感知不到：ctl、mainLock、workers")]),t._v(" "),n("li",[t._v("记录信息：largestPoolSize、completedTaskCount")])]),t._v(" "),n("p",[t._v("可以看到，对于严重影响这一类，我们在使用线程池的各个阶段，都需要密切关注与考虑，这些域都影响着线程池的行为，前六个就是我们新建线程池时需要传递的参数，这里不做解释，最后一个allowCoreThreadTimeOut是一个boolean型的变量，默认为false，如果设置为true，则核心线程也会受到keepAliveTime的影响，即超过空闲等待时间也会结束")]),t._v(" "),n("p",[t._v("那么对于感知不到的域，他们的作用又是什么呢，简单的说——它们实现了优化")]),t._v(" "),n("ul",[n("li",[t._v("ctl：这是一个原子类对象，它将Integer分为了两部分，一部分用来记录当前线程池的状态，另一部分记录现有工作线程的数量")]),t._v(" "),n("li",[t._v("mainLock：这是一个ReentrantLock锁，线程池的某些操作需要它来保证同步")]),t._v(" "),n("li",[t._v("workers：这个域很重要，它是想想为什么要实现线程池？嗯，没错，就是它的功劳")])]),t._v(" "),n("p",[t._v("当然在线程池的域中还有一些用来记录信息的变量")]),t._v(" "),n("ul",[n("li",[t._v("largestPoolSize：该线程池到目前为止拥有的最大线程数")]),t._v(" "),n("li",[t._v("completedTaskCount：已完成的任务的数量")])]),t._v(" "),n("h2",{attrs:{id:"新增任务流程图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新增任务流程图","aria-hidden":"true"}},[t._v("#")]),t._v(" 新增任务流程图")]),t._v(" "),n("p",[t._v("为了让大家更好的了解线程池，我们首先将图中的概念和线程池中的变量名做一下对应关系")]),t._v(" "),n("ul",[n("li",[t._v("已有线程数：ctl中表示的一部分")]),t._v(" "),n("li",[t._v("核心线程数：corePoolSize")]),t._v(" "),n("li",[t._v("工作者：workers")]),t._v(" "),n("li",[t._v("队列：workQueue")]),t._v(" "),n("li",[t._v("最大线程数：maximumPoolSize")]),t._v(" "),n("li",[t._v("抛弃策略：handler")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(190),alt:""}})]),t._v(" "),n("p",[t._v("这个图大致看下来是没有问题的，但是仔细一想就有很多问题")]),t._v(" "),n("ul",[n("li",[t._v("核心工作者新建并执行完第一个任务之后就没用了吗？")]),t._v(" "),n("li",[t._v("队列中添加完任务谁来取来执行呢？")])]),t._v(" "),n("p",[t._v("其实这两个问题可以一起来回答——核心工作者会不停的尝试取出队列中的任务来执行。那么接下来，我们就来看看工作者到底是如何实现的")]),t._v(" "),n("h2",{attrs:{id:"worker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker","aria-hidden":"true"}},[t._v("#")]),t._v(" Worker")]),t._v(" "),n("p",[t._v("Worker作为ThreadPoolExecutor的一个内部类，我们同样先看一看它有哪些域")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("名字")]),t._v(" "),n("th",[t._v("备注")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("thread")]),t._v(" "),n("td",[t._v("从线程工厂获得的线程")])]),t._v(" "),n("tr",[n("td",[t._v("firstTask")]),t._v(" "),n("td",[t._v("首先要执行的任务，可以为空")])]),t._v(" "),n("tr",[n("td",[t._v("completedTasks")]),t._v(" "),n("td",[t._v("已完成的任务数")])])])]),t._v(" "),n("p",[t._v("Worker类同样实现了Runnable接口，在其run方法中，只有一行代码")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("runWorker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("runWorker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Worker w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将worker的第一个任务当作要执行的任务")]),t._v("\n    Runnable task "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstTask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果任务不为空或者可以获取到任务则执行任务")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                task "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行完毕，记录一下")]),t._v("\n                w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("completedTasks"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" Runnable "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" timedOut "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断上一次从队列中获取任务是否超时")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断这个工作者是否会超时")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" timed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" allowCoreThreadTimeOut "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" wc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" corePoolSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果这个工作者是可以超时的就是用poll等待一段时间，否则使用take一直等待")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//即不允许超时的核心工作者用take一直等待，超时工作者用poll等待一段时间")]),t._v("\n            Runnable r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n                workQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keepAliveTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NANOSECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            workQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("take")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            timedOut "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" retry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            timedOut "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("为节省篇幅以及去除不需要关注的代码，本文源码进行了删减，非Java源码")])]),t._v(" "),n("p",[t._v("从上述源码可以看到，核心工作者做完自己的第一个任务后会尝试从工作队列中获取任务来做")]),t._v(" "),n("h2",{attrs:{id:"hook方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook方法","aria-hidden":"true"}},[t._v("#")]),t._v(" hook方法")]),t._v(" "),n("p",[t._v("如果我们希望在每个任务执行前后都做一些事情，比如开始执行前通知某服务，执行结束后记录日志等，应该怎么做呢？线程池其实已经为我们提供了这些方法")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("runWorker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Worker w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Thread wt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Thread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Runnable task "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstTask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstTask "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hook方法")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeExecute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                Throwable thrown "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                \ttask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Throwable x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    thrown "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hook方法")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterExecute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thrown"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br")])]),n("p",[t._v("上述代码中添加"),n("em",[t._v("hook方法")]),t._v("注释的地方就可以完成我们的需求，它们都是protected方法，我们只需要继承线程池并重写这两个方法就可以了")]),t._v(" "),n("p",[t._v("当然除了以上两个hook方法之外，线程池还提供了一个hook方法——ThreadPoolExecutor#terminated，该方法在线程池结束后会被调用")])])}],e=a(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);r.options.__file="ThreadPoolExecutor源码解读.md";s.default=r.exports}}]);