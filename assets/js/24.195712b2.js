(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{198:function(s,a,t){s.exports=t.p+"assets/img/flyweight.873270c0.jpg"},233:function(s,a,t){"use strict";t.r(a);var n=[function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"享元模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#享元模式","aria-hidden":"true"}},[s._v("#")]),s._v(" 享元模式")]),s._v(" "),n("p",[s._v("享元模式的英文原名为Flyweight Pattern，又可以称之为蝇量模式。不够这里使用享元模式对其进行命名更能反映模式的用意：享元，共享元数据。享元模式以"),n("strong",[s._v("共享")]),s._v("的方式高效的支持"),n("strong",[s._v("细颗粒")]),s._v("的对象。")]),s._v(" "),n("h3",{attrs:{id:"场景假设"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#场景假设","aria-hidden":"true"}},[s._v("#")]),s._v(" 场景假设")]),s._v(" "),n("p",[s._v("现在我们模拟围棋对弈的场景，对弈双方每次下一个棋子，如果二人棋力相当，那么将有可能会出现棋盘被下满的场景")]),s._v(" "),n("p",[s._v("那通常情况下面对这样的场景我们应该如何做呢？首先新建一个棋子类，用来保存棋子的颜色和位置，示例代码如下")]),s._v(" "),n("div",{staticClass:"language-Java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Getter")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Setter")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@AllArgsConstructor")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Chess")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Chess")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" String color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" String X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" String Y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("于是我们在下棋的时候每当对弈双方下一个子时，我们就需要new一个棋子出来，如果双方把棋局下满的话，那我们就需要new几百个棋子出来，这无疑使造成了内存的浪费，于是我们对上述场景进行分析后，发现了以下几个特点")]),s._v(" "),n("ol",[n("li",[s._v("棋子只有黑白两种颜色，同样颜色的棋子本身并无不同")]),s._v(" "),n("li",[s._v("棋子本身并不需要知道自己的坐标")])]),s._v(" "),n("p",[s._v("以上就是我们的场景假设，接下来我们来尝试使用享元模式来解决这个问题")]),s._v(" "),n("h3",{attrs:{id:"模式介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模式介绍","aria-hidden":"true"}},[s._v("#")]),s._v(" 模式介绍")]),s._v(" "),n("h4",{attrs:{id:"概念引入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念引入","aria-hidden":"true"}},[s._v("#")]),s._v(" 概念引入")]),s._v(" "),n("p",[s._v("在具体介绍享元模式之前，我们首先来介绍两个概念")]),s._v(" "),n("ul",[n("li",[s._v("内部状态：储存在享元对象内部，不会随着外界的影响而改变的状态，内部状态可以共享")]),s._v(" "),n("li",[s._v("外部状态：会随着外界的影响而改变的状态，享元对象不对其进行保存，外部状态的保存应该由客户端负责")])]),s._v(" "),n("h4",{attrs:{id:"类图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类图","aria-hidden":"true"}},[s._v("#")]),s._v(" 类图")]),s._v(" "),n("p",[n("img",{attrs:{src:t(198),alt:""}})]),s._v(" "),n("p",[s._v("在享元模式中，有四个角色")]),s._v(" "),n("ul",[n("li",[s._v("抽象享元类：享元类的父类，通常是一个接口或者抽象类，规定了享元类公共的方法")]),s._v(" "),n("li",[s._v("具体享元类：共享的享元类，类中提供了内部状态的储存空间")]),s._v(" "),n("li",[s._v("不共享具体享元类：不共享的享元类，同样是抽象享元类的子类，但是并不需要进行共享")]),s._v(" "),n("li",[s._v("享元工厂：生产具体享元类，并保存已生产的享元类")])]),s._v(" "),n("p",[s._v("以上就是享元模式的概念介绍，接下来我们用享元模式来解决场景假设中的两个问题")]),s._v(" "),n("p",[s._v("首先我们对棋子类进行属性的分类。很明显，棋子的颜色不会随着外界环境而发生改变，所以棋子的颜色是内部状态。棋子的坐标会随着对弈双方的选择而不同，属于外部状态。于是我们对棋子类进行了更改")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Getter")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Setter")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@AllArgsConstructor")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConcreteChess")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Chess")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" String color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        System"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" X:"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y:"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("我们对棋子的内部状态进行保存，并且提供一个方法来接收外部状态，至于外部状态应该如何保存，享元模式并不关心。我们同时增加了一个棋子的工厂类，工厂类中保存已创建的棋子")]),s._v(" "),n("div",{staticClass:"language-Java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ChessFactory")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Map"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Chess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" chessPool "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" Chess "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getChess")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Chess res "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" chessPool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            res "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConcreteChess")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            chessPool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("于是当我们使用享元模式优化过的代码时，就不会再造成内存的浪费了。")]),s._v(" "),n("h3",{attrs:{id:"优秀享元模式案例——字符串常量池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优秀享元模式案例——字符串常量池","aria-hidden":"true"}},[s._v("#")]),s._v(" 优秀享元模式案例——字符串常量池")]),s._v(" "),n("p",[s._v("字符串常量池就是享元模式的优秀实现，接下来我们来根据源码来分析一下字符串常量池是如何做的")]),s._v(" "),n("blockquote",[n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Symbol* SymbolTable::lookup(const char* name, int len, TRAPS) {\nunsigned int hashValue = hash_symbol(name, len);\nint index = the_table()->hash_to_index(hashValue);\n\nSymbol* s = the_table()->lookup(index, name, len, hashValue);\n\n// Found\nif (s != NULL) return s;\n\n// Grab SymbolTable_lock first.\nMutexLocker ml(SymbolTable_lock, THREAD);\n\n// Otherwise, add to symbol to table\nreturn the_table()->basic_add(index, (u1*)name, len, hashValue, true, CHECK_NULL);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])])]),s._v(" "),n("p",[s._v("当我们调用String#intern方法时，jvm就会去字符串常量池中进行查找，如果找到则返回其引用")]),s._v(" "),n("blockquote",[n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('Symbol* SymbolTable::basic_add(int index_arg, u1 *name, int len,\n                               unsigned int hashValue_arg, bool c_heap, TRAPS) {\n  /*----删去了一些和本帖无关的代码----*/\n\n  // Create a new symbol.\n  Symbol* sym = allocate_symbol(name, len, c_heap, CHECK_NULL);\n  assert(sym->equals((char*)name, len), "symbol must be properly initialized");\n\n  HashtableEntry<Symbol*, mtSymbol>* entry = new_entry(hashValue, sym);\n  add_entry(index, entry);\n  return sym;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])])]),s._v(" "),n("p",[s._v("如果没找到则创建字符串的引用，将其保存到常量池，并且返回引用")])])}],e=t(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);r.options.__file="设计模式——享元模式.md";a.default=r.exports}}]);