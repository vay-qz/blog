(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{191:function(t,e,a){t.exports=a.p+"assets/img/JMM.b7f94146.jpg"},271:function(t,e,a){"use strict";a.r(e);var i=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"volatile详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#volatile详解","aria-hidden":"true"}},[this._v("#")]),this._v(" volatile详解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#java内存模型"}},[this._v("java内存模型")])]),e("li",[e("a",{attrs:{href:"#java独立线程的特性"}},[this._v("Java独立线程的特性")])]),e("li",[e("a",{attrs:{href:"#两个操作"}},[this._v("两个操作")])]),e("li",[e("a",{attrs:{href:"#volatile的两个性质"}},[this._v("volatile的两个性质")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"java内存模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java内存模型","aria-hidden":"true"}},[this._v("#")]),this._v(" java内存模型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(191),alt:"img"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"java独立线程的特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java独立线程的特性","aria-hidden":"true"}},[this._v("#")]),this._v(" Java独立线程的特性")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("每个java线程都有独立的工作内存，每个线程只能读写自己线程所在的工作内存")]),this._v(" "),e("li",[this._v("线程的工作内存中保存了被该线程用到的变量的主内存副本拷贝")]),this._v(" "),e("li",[this._v("线程的对变量的读取、赋值都必须在工作内存中进行，不能直接读写主内存的变量")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"两个操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两个操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 两个操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("改变变量：操作引擎对工作内存中的变量进行修改，而后将新值同步回主内存")])]),this._v(" "),e("li",[e("p",[this._v("获取变量：从主内存读取变量到工作内存，而后被操作引擎获取")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"volatile的两个性质"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#volatile的两个性质","aria-hidden":"true"}},[this._v("#")]),this._v(" volatile的两个性质")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可见性：新值能立即同步到主内存，使用前立即从主内存刷新")]),this._v(" "),e("li",[this._v("一定的有序性：volatile之前的和之后的不会被指令重排序")])])}],s=a(0),r=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p"),t._m(1),a("p"),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/VAS-QZ/Learning/tree/master/NIO",target:"_blank",rel:"noopener noreferrer"}},[t._v("测试代码"),a("OutboundLink")],1)])])},i,!1,null,null,null);r.options.__file="volatile.md";e.default=r.exports}}]);